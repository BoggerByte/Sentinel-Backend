// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: user.sql

package db

import (
	"context"
)

const createOrUpdateUser = `-- name: CreateOrUpdateUser :one
INSERT INTO "user" (discord_id, username, discriminator, verified, email,
                    avatar, banner, accent_color)
VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
ON CONFLICT (discord_id) DO UPDATE
    SET username      = $2,
        discriminator = $3,
        verified      = $4,
        email         = $5,
        avatar        = $6,
        banner        = $8,
        accent_color  = $9
RETURNING id, discord_id, username, discriminator, verified, email, avatar, banner, accent_color, created_at
`

type CreateOrUpdateUserParams struct {
	DiscordID     string `json:"discord_id"`
	Username      string `json:"username"`
	Discriminator string `json:"discriminator"`
	Verified      bool   `json:"verified"`
	Email         string `json:"email"`
	Avatar        string `json:"avatar"`
	Banner        string `json:"banner"`
	AccentColor   int64  `json:"accent_color"`
	AccentColor_2 int64  `json:"accent_color_2"`
}

func (q *Queries) CreateOrUpdateUser(ctx context.Context, arg CreateOrUpdateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createOrUpdateUser,
		arg.DiscordID,
		arg.Username,
		arg.Discriminator,
		arg.Verified,
		arg.Email,
		arg.Avatar,
		arg.Banner,
		arg.AccentColor,
		arg.AccentColor_2,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.DiscordID,
		&i.Username,
		&i.Discriminator,
		&i.Verified,
		&i.Email,
		&i.Avatar,
		&i.Banner,
		&i.AccentColor,
		&i.CreatedAt,
	)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, discord_id, username, discriminator, verified, email, avatar, banner, accent_color, created_at
FROM "user"
WHERE discord_id = $1
LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, discordID string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, discordID)
	var i User
	err := row.Scan(
		&i.ID,
		&i.DiscordID,
		&i.Username,
		&i.Discriminator,
		&i.Verified,
		&i.Email,
		&i.Avatar,
		&i.Banner,
		&i.AccentColor,
		&i.CreatedAt,
	)
	return i, err
}
